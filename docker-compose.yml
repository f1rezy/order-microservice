version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres_container
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    container_name: redis_container
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  migrate:
    image: migrate/migrate
    container_name: migrate_container
    command:
      [ "-path", "/migrations", "-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable", "up" ]
    volumes:
      - ./migrations:/migrations
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy

  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_1_container
    restart: unless-stopped
    environment:
      - GRPC_SERVER_PORT=50051
      - REST_SERVER_PORT=8081
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOST
      - POSTGRES_PORT
      - REDIS_HOST
      - REDIS_PORT
    ports:
      - "8081:8081"
      - "50051:50051"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_2_container
    restart: unless-stopped
    environment:
      - GRPC_SERVER_PORT=50052
      - REST_SERVER_PORT=8082
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOST
      - POSTGRES_PORT
      - REDIS_HOST
      - REDIS_PORT
    ports:
      - "8082:8082"
      - "50052:50052"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  app3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_3_container
    restart: unless-stopped
    environment:
      - GRPC_SERVER_PORT=50053
      - REST_SERVER_PORT=8083
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOST
      - POSTGRES_PORT
      - REDIS_HOST
      - REDIS_PORT
    ports:
      - "8083:8083"
      - "50053:50053"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "80:80"
      - "9090:9090"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app1
      - app2
      - app3

volumes:
  postgres_data:
  redis_data:
